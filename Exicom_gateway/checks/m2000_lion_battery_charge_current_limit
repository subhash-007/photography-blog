#!/usr/bin/python
"""
moduleChargeCurrentLimit of poller device.

This is part of device application.
Poller script determines the moduleChargeCurrentLimit of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.11.7 from snmp agent of device at specific interval.
Device moduleChargeCurrentLimit is sent to device application

"""
# ######################################################################
# Function: check_m2000_lion_battery_charge_current_limit
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device lion_battery_charge_current_limit
# ######################################################################
m2000_lion_battery_charge_current_limit_default_levels = ()

def check_m2000_lion_battery_charge_current_limit(item, params, info):
    """
            check_m2000_lion_battery_charge_current_limit function fetches the moduleChargeCurrentLimit

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = ['']
    if info:
        try:
            state = 0
            try :
                m2000_lion_battery_charge_current_limit = float(info[0][0])
            except Exception,e:
                m2000_lion_battery_charge_current_limit = str(info[0][0].replace(" ","@"))
            perf_data = [("m2000_lion_battery_charge_current_limit", m2000_lion_battery_charge_current_limit)]
            return (state, "m2000_lion_battery_charge_current_limit=%s" % m2000_lion_battery_charge_current_limit, perf_data)
        except Exception,e:
            return (3, "m2000_lion_battery_charge_current_limit=%s" % infotext.replace(" ","@"), perf_data)
    else:
        return (state, "m2000_lion_battery_charge_current_limit=%s" %"No data retrieved".replace(" ","@"), perf_data)


# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["m2000_lion_battery_charge_current_limit"] = {
    'check_function':          check_m2000_lion_battery_charge_current_limit,
    'service_description':     'm2000_lion_battery_charge_current_limit',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device moduleChargeCurrentLimit
#########################################################################
snmp_info["m2000_lion_battery_charge_current_limit"] = ('.1.3.6.1.4.1.38016.14', ['11.7'])
