#!/usr/bin/python
"""
load1KWH of poller device.

This is part of device application.
Poller script determines the load1KWH of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.2.12.121 from snmp agent of device at specific interval.
Device load1KWH is sent to device application

"""
# ######################################################################
# Function: check_m2000_load_kwh
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device load_kwh
# ######################################################################
m2000_load_kwh_default_levels = ()

def check_m2000_load_kwh(item, params, info):
    """
            check_m2000_load_kwh function fetches the load1KWH

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = []
    try:
        state = 0
	index =0
        for line in info:
            index= index + 1
            m2000_load_kwh  = line[0]
            try :
                m2000_load_kwh = float(info[0][0])
            except Exception,e:
                m2000_load_kwh = str(info[0][0].replace(" ","@"))
	    ds = "m2000_load_%d_kwh" %index
            perf_data.append((ds ,m2000_load_kwh))
            infotext = "m2000_load_kwh=%s" % m2000_load_kwh
    except Exception,e:
	print "Exception :",e
        infotext = "unknown_value"
    return (state,infotext,perf_data)


# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["m2000_load_kwh"] = {
    'check_function':          check_m2000_load_kwh,
    'service_description':     'm2000_load_kwh',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device load1KWH
#########################################################################
#snmp_info["m2000_load_kwh"] = (('.1.3.6.1.4.1.38016.14',['2.11']),('.1.3.6.1.4.1.38016.14',['2.18']),('.1.3.6.1.4.1.38016.14',['2.25']),('.1.3.6.1.4.1.38016.14',['2.32']))
#snmp_info["m2000_load_kwh"] = ('.1.3.6.1.4.1.38016.14.2.12',B])
snmp_info["m2000_load_kwh"] = ('.1.3.6.1.4.1.38016.14.2', ['12.12'])
