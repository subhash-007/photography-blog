#!/usr/bin/python
"""
solarRecStatus of poller device.

This is part of device application.
Poller script determines the solarRecStatus of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.10.6.1.3 from snmp agent of device at specific interval.
Device solarRecStatus is sent to device application

"""
# ######################################################################
# Function: check_m2000_solarindiv_rect_recstatus
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device solarindiv_recstatus
# ######################################################################
m2000_solarindiv_rect_recstatus_default_levels = ()

def check_m2000_solarindiv_rect_recstatus(item, params, info):
    """
            check_m2000_solarindiv_rect_recstatus function fetches the solarRecStatus

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = ['']
    try:
        state = 0
        for line in info:
            index= index + 1
            m2000_solarindiv_rect_recstatus  = line[0]
            try :
                m2000_solarindiv_rect_recstatus = float(info[0][0])
            except Exception,e:
                m2000_solarindiv_rect_recstatus = str(info[0][0].replace(" ","@"))
            perf_data.append(("m2000_solarindiv_rect_%d_recstatus" %index,m2000_solarindiv_rect_recstatus))
            infotext = "m2000_solarindiv_rect_recstatus" % m2000_solarindiv_rect_recstatus
    except Exception,e:
        infotext = "unknown_value"
    return (state,infotext,perf_data)




# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["m2000_solarindiv_rect_recstatus"] = {
    'check_function':          check_m2000_solarindiv_rect_recstatus,
    'service_description':     'm2000_solarindiv_rect_recstatus',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device solarRecStatus
#########################################################################
snmp_info["m2000_solarindiv_rect_recstatus"] = ('.1.3.6.1.4.1.38016.14.10.6', ['1.3'])
