#!/usr/bin/python
import binascii
"""
vlan Poller script.
This is part of device application. 
Poller script determines the vlan. 
poller script takes the snmp value of OID .1.3.6.1.4.1.1918.2.13.10.100.42 from snmp agent of device at specific interval.
all ports status are sent to device application 
"""
# ######################################################################
# Function : check_sc200_battery_type
#
# Parameters: info (SNMP Output) _no_params(No Parameters)
#
# Output: service state and plugin output
# #####################################################################

def check_sc200_battery_type(item, _no_params, info):
    """
                check_sc200_battery_type function calculates vlan

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : OK - vlan=1;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    sc200_battery_type = None
    try:
        if info[0]:
	    #print "info_value",info
            try:
                sc200_battery_type = float(info[0][0])
            except Exception,e:
                sc200_battery_type = info[0][0].replace(' ','@')
            state = 0
            infotext = "sc200_battery_type=%s" % sc200_battery_type
    except Exception,e:
        infotext = "sc200_battery_type=unknown_value"
    return (state,infotext,[("sc200_battery_type",sc200_battery_type)])

# This check works on all SNMP hosts

check_info["sc200_battery_type"] = {
    'check_function':          check_sc200_battery_type,
    'service_description':     'sc200_battery_type',
    'snmp_info':               ('.1.3.6.1.4.1.1918.2.13.10',['100.42']),
    'snmp_scan_function':      lambda oid: "sc200" in oid(".1.3.6.1.4.1.38016.14.1.1.0").lower(),
    'has_perfdata': True,
}

