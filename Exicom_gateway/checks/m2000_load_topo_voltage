#!/usr/bin/python
"""
voltage of poller device.

This is part of device application.
Poller script determines the voltage of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.2.12.2 from snmp agent of device at specific interval.
Device voltage is sent to device application

"""
# ######################################################################
# Function: check_m2000_load_topo_voltage
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device load_topo_voltage
# ######################################################################
m2000_load_topo_voltage_default_levels = ()

def check_m2000_load_topo_voltage(item, params, info):
    """
            check_m2000_load_topo_voltage function fetches the voltage

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = ['']
    if info:
        try:
            state = 0
            try :
                m2000_load_topo_voltage = float(info[0][0])
            except Exception,e:
                m2000_load_topo_voltage = str(info[0][0].replace(" ","@"))
            perf_data = [("m2000_load_topo_voltage", m2000_load_topo_voltage)]
            return (state, "m2000_load_topo_voltage=%s" % m2000_load_topo_voltage, perf_data)
        except Exception,e:
            return (3, "m2000_load_topo_voltage=%s" % infotext.replace(" ","@"), perf_data)
    else:
        return (state, "m2000_load_topo_voltage=%s" %"No data retrieved".replace(" ","@"), perf_data)


# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["m2000_load_topo_voltage"] = {
    'check_function':          check_m2000_load_topo_voltage,
    'service_description':     'm2000_load_topo_voltage',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device voltage
#########################################################################
snmp_info["m2000_load_topo_voltage"] = ('.1.3.6.1.4.1.38016.14.2', ['12.2'])
