#!/usr/bin/python
"""
reckTemperature2 of poller device.

This is part of device application.
Poller script determines the reckTemperature2 of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.8.2 from snmp agent of device at specific interval.
Device reckTemperature2 is sent to device application

"""
# ######################################################################
# Function: check_m2000_parameters_reck_temp2
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device parameters_reck_temp2
# ######################################################################
m2000_parameters_reck_temp2_default_levels = ()

def check_m2000_parameters_reck_temp2(item, params, info):
    """
            check_m2000_parameters_reck_temp2 function fetches the reckTemperature2

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = ['']
    if info:
        try:
            state = 0
            try :
                m2000_parameters_reck_temp2 = float(info[0][0])
            except Exception,e:
                m2000_parameters_reck_temp2 = str(info[0][0].replace(" ","@"))
            perf_data = [("m2000_parameters_reck_temp2", m2000_parameters_reck_temp2)]
            return (state, "m2000_parameters_reck_temp2=%s" % m2000_parameters_reck_temp2, perf_data)
        except Exception,e:
            return (3, "m2000_parameters_reck_temp2=%s" % infotext.replace(" ","@"), perf_data)
    else:
        return (state, "m2000_parameters_reck_temp2=%s" %"No data retrieved".replace(" ","@"), perf_data)


# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["m2000_parameters_reck_temp2"] = {
    'check_function':          check_m2000_parameters_reck_temp2,
    'service_description':     'm2000_parameters_reck_temp2',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device reckTemperature2
#########################################################################
snmp_info["m2000_parameters_reck_temp2"] = ('.1.3.6.1.4.1.38016.14', ['8.2'])
