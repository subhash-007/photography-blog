#!/usr/bin/python
import binascii
"""
vlan Poller script.
This is part of device application. 
Poller script determines the vlan. 
poller script takes the snmp value of OID .1.3.6.1.4.1.161.19.3.2.1.55.0 from snmp agent of device at specific interval.
all ports status are sent to device application 
"""
# ######################################################################
# Function : check_exicom_model_no_invent
#
# Parameters: info (SNMP Output) _no_params(No Parameters)
#
# Output: service state and plugin output
# #####################################################################

def check_lion_battery_installed_module_invent(item, _no_params, info):
    """
                check_exicom_model_no_invent function calculates vlan

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : OK - vlan=1;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    installed_module =None
    try:
        if info:
            if info[0][0]:
                installed_module = info[0][0]
		try:
		    installed_module = float(installed_module)
		except Exception,e:
		    installed_module = info[0][0].replace(' ','@')
                state = 0
                infotext = "installed_module=%s" % installed_module
    except Exception,e:
        infotext = "unknown_value"
    return (state,infotext,[("installed_module",installed_module)])


check_info["lion_battery_installed_module_invent"] = {
    'check_function':          check_lion_battery_installed_module_invent,
    'service_description':     'lion_battery_installed_module_invent',
    'has_perfdata':         True,
    'snmp_info':               ('.1.3.6.1.4.1.38016.14.11', ['1.0']),
    'snmp_scan_function':      lambda oid: "m1000" in oid(".1.3.6.1.4.1.38016.14.1.1.0").lower(),
}

