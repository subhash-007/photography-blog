#!/usr/bin/python
"""
dgRunHrs of poller device.

This is part of device application.
Poller script determines the dgRunHrs of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.19.4 from snmp agent of device at specific interval.
Device dgRunHrs is sent to device application

"""
# ######################################################################
# Function: check_ec500_dg_run_hrs_status
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device dg_run_hrs
# ######################################################################
ec500_dg_run_hrs_default_levels = ()

def check_ec500_dg_run_hrs_status(item, params, info):
    """
            check_ec500_dg_run_hrs_status function fetches the dgRunHrs

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = ['']
    if info:
        try:
            state = 0
            try :
                ec500_dg_run_hrs = float(info[0][0])
            except Exception,e:
                ec500_dg_run_hrs = str(info[0][0].replace(" ","@"))
            perf_data = [("ec500_dg_run_hrs", ec500_dg_run_hrs)]
            return (state, "ec500_dg_run_hrs=%s" % ec500_dg_run_hrs, perf_data)
        except Exception,e:
            return (3, "ec500_dg_run_hrs=%s" % infotext.replace(" ","@"), perf_data)
    else:
        return (state, "ec500_dg_run_hrs=%s" %"No data retrieved".replace(" ","@"), perf_data)


# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["ec500_dg_run_hrs_status"] = {
    'check_function':          check_ec500_dg_run_hrs_status,
    'service_description':     'ec500_dg_run_hrs_status',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device dgRunHrs
#########################################################################
snmp_info["ec500_dg_run_hrs_status"] = ('.1.3.6.1.4.1.38016.14', ['19.4'])
