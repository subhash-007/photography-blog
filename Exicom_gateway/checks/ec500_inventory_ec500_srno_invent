#!/usr/bin/python
"""
ec500SrNumber of poller device.

This is part of device application.
Poller script determines the ec500SrNumber of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.9.3.2.1.3 from snmp agent of device at specific interval.
Device ec500SrNumber is sent to device application

"""
# ######################################################################
# Function: check_ec500_inventory_ec500_srno_invent
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device inventory_ec500_srno
# ######################################################################
ec500_inventory_ec500_srno_default_levels = ()

def check_ec500_inventory_ec500_srno_invent(item, params, info):
    """
            check_ec500_inventory_ec500_srno_invent function fetches the ec500SrNumber

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = ['']
    if info:
        try:
            state = 0
            try :
                ec500_inventory_ec500_srno = float(info[0][0])
            except Exception,e:
                ec500_inventory_ec500_srno = str(info[0][0].replace(" ","@"))
            perf_data = [("ec500_inventory_ec500_srno", ec500_inventory_ec500_srno)]
            return (state, "ec500_inventory_ec500_srnoe=%s" % ec500_inventory_ec500_srno, perf_data)
        except Exception,e:
            return (3, "ec500_inventory_ec500_srno=%s" % infotext.replace(" ","@"), perf_data)
    else:
        return (state, "ec500_inventory_ec500_srno=%s" %"No data retrieved".replace(" ","@"), perf_data)




# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["ec500_inventory_ec500_srno_invent"] = {
    'check_function':          check_ec500_inventory_ec500_srno_invent,
    'service_description':     'ec500_inventory_ec500_srno_invent',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device ec500SrNumber
#########################################################################
snmp_info["ec500_inventory_ec500_srno_invent"] = ('.1.3.6.1.4.1.38016.14.9.3.2', ['1.3'])
