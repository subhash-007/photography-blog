#!/usr/bin/python
"""
dc_battcumcharge_tm_status of poller device.

This is part of device application.
Poller script determines the dc_battcumcharge_tm_status of device.
poller script takes the snmp value of OID .1.3.6.1.4.1.38016.14.2.10.6 from snmp agent of device at specific interval.
Device dc_battcumcharge_tm_status is sent to device application

"""
# ######################################################################
# Function: check_ec500_dc_battcumcharge_tm_status
#
# Parameters: info (SNMP Ouput) params (No Parameters)
#
# Output: device dc_battcumcharge_tm
# ######################################################################
ec500_dc_battcumcharge_tm_default_levels = ()

def check_ec500_dc_battcumcharge_tm_status(item, params, info):
    """
            check_ec500_dc_battcumcharge_tm_status function fetches the dc_battcumcharge_tm_status

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                                        3: unknown
                        infotext(string):
                                    plugin output
                                    Example : OK - ;;;;

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    perf_data = ['']
    if info:
        try:
            state = 0
            try :
                ec500_dc_battcumcharge_tm = float(info[0][0])
            except Exception,e:
                ec500_dc_battcumcharge_tm = str(info[0][0].replace(" ","@"))
            perf_data = [("ec500_dc_battcumcharge_tm", ec500_dc_battcumcharge_tm)]
            return (state, "ec500_dc_battcumcharge_tm=%s" % ec500_dc_battcumcharge_tm, perf_data)
        except Exception,e:
            return (3, "ec500_dc_battcumcharge_tm=%s" % infotext.replace(" ","@"), perf_data)
    else:
        return (state, "ec500_dc_battcumcharge_tm=%s" %"No data retrieved".replace(" ","@"), perf_data)


# This check works on all SNMP hosts
"""
    Dictionary-based declaration of all check types
"""
check_info["ec500_dc_battcumcharge_tm_status"] = {
    'check_function':          check_ec500_dc_battcumcharge_tm_status,
    'service_description':     'ec500_dc_battcumcharge_tm_status',
    'has_perfdata':		True,
}

#########################################################################
#	SNMP OID for the device dc_battcumcharge_tm_status
#########################################################################
snmp_info["ec500_dc_battcumcharge_tm_status"] = ('.1.3.6.1.4.1.38016.14.2', ['10.6'])
